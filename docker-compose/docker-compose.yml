version: "3"
#networks:
#  selenoid:
#    external:
#      name: selenoid # 需要事先创建：docker network create selenoid

#networks:
#  se-net:
#    ipam:
#      driver: default
#      config:
#        - subnet: 172.177.0.0/16

services:
  selenoid:
    container_name: selenoid
    network_mode: bridge
    image: aerokube/selenoid:latest-release
    volumes:
      - "./config:/etc/selenoid"
      - "/var/run/docker.sock:/var/run/docker.sock"
      - "./logs:/opt/selenoid/logs"
    command: [ "-conf", "/etc/selenoid/browsers.json",
               "-video-output-dir", "/opt/selenoid/video",
               "-log-output-dir", "/opt/selenoid/logs",
               "-limit", "10",
               "-disable-queue",
               "-container-network", "bridge" ]
    ports:
      - "4444:4444"
    restart: always
#    networks:
#      - selenoid

  selenoid-ui:
    network_mode: bridge
    container_name: selenoid-ui
    image: "aerokube/selenoid-ui"
    links:
      - selenoid
    ports:
      - "8081:8080"
    command: [ "--selenoid-uri", "http://selenoid:4444" ]
    restart: always
#    networks:
#      - selenoid

  webapp-selenoid:
    container_name: webapp-selenoid
    image: rubyangxg/jd-qinglong:1.3
    privileged: true
    environment:
      - "SPRING_PROFILES_ACTIVE=debugremote"
      - "selenium.hub.url=http://selenoid:4444/wd/hub"
      - "selenium.hub.status.url=http://selenoid:4444/status"
    ports:
      - "5702:8080"
    volumes:
      - "$(pwd)"/env.properties:/env.properties
      - "$(pwd)"/go-cqhttp:/go-cqhttp
    depends_on:
      - selenoid

